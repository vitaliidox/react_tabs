{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTab","onTabSelected","map","tab","className","id","href","onClick","title","content","App","useState","selected","setSelected","ReactDOM","render","document","getElementById"],"mappings":"iMAYaA,EAAwB,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cACzD,OACE,6BACGF,EAAKG,KAAI,SAAAC,GAAG,OACX,oBAEE,UAAQ,MACRC,UAAWJ,EAAYK,KAAOF,EAAIE,GAAK,YAAc,GAHvD,SAKE,mBACEC,KAAI,WAAMH,EAAIE,IACd,UAAQ,UACRE,QAAS,kBAAMN,EAAcE,IAH/B,SAKGA,EAAIK,SATFL,EAAIE,UCVNN,EAAO,CAClB,CAAEM,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,eACxC,CAAEJ,GAAI,QAASG,MAAO,QAASC,QAAS,gBAS7BC,EAAM,WACjB,MAAgCC,mBAASZ,EAAK,IAA9C,mBAAOa,EAAP,KAAiBC,EAAjB,KAQA,OACE,sBAAKT,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBQ,EAASJ,SAG/B,sBAAK,UAAQ,gBAAb,UACE,qBAAKJ,UAAU,gBAAf,SACE,cAAC,EAAD,CACEJ,YAAaY,EACbb,KAAMA,EACNE,cAjBY,SAACE,GACjBS,IAAaT,GACfU,EAAYV,QAmBV,qBAAKC,UAAU,QAAQ,UAAQ,YAA/B,SACGQ,EAASH,iBCzCpBK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b8a6896c.chunk.js","sourcesContent":["interface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[],\n  selectedTab: Tab,\n  onTabSelected: any,\n};\n\nexport const Tabs: React.FC<Props> = ({ tabs, selectedTab, onTabSelected }) => {\n  return (\n    <ul>\n      {tabs.map(tab => (\n        <li\n          key={tab.id}\n          data-cy=\"Tab\"\n          className={selectedTab.id === tab.id ? 'is-active' : ''}\n        >\n          <a\n            href={`#${tab.id}`}\n            data-cy=\"TabLink\"\n            onClick={() => onTabSelected(tab)}\n          >\n            {tab.title}\n          </a>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\nexport const App = () => {\n  const [selected, setSelected] = useState(tabs[0]);\n\n  const onTabSelected = (tab: Tab) => {\n    if (selected !== tab) {\n      setSelected(tab);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selected.title}`}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <Tabs\n            selectedTab={selected}\n            tabs={tabs}\n            onTabSelected={onTabSelected}\n          />\n        </div>\n\n        <div className=\"block\" data-cy=\"TabConten\">\n          {selected.content}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}